class Solution {
    public int findKRotation(List<Integer> nums) {
        int low=0,high=nums.size()-1;
        int ans=Integer.MAX_VALUE;
        int index = -1;
        while(low<=high)
        {
            int mid=low+(high-low)/2;
            if(nums.get(low)<=nums.get(high))
            {
                if (nums.get(low) < ans) {
                    index = low;
                    ans = nums.get(low);
                }
                break;
            }
            if (nums.get(low) <= nums.get(mid)) {
                // keep the minimum:
                if (nums.get(low) < ans) {
                    index = low;
                    ans = nums.get(low);
                }

                // Eliminate left half:
                low = mid + 1;
            } else { //if right part is sorted:

                // keep the minimum:
                if (nums.get(mid) < ans) {
                    index = mid;
                    ans = nums.get(mid);
                }

                // Eliminate right half:
                high = mid - 1;
            }
        }
        return index;
        
    }
}
