class Solution {
    public Solution() {}

    Stack<Integer> stk=new Stack<>();
    Stack<Integer> min=new Stack<>();
    public void push(int x) {
        stk.push(x);
        if(min.isEmpty() || x<=min.peek()) min.push(x);
        
    }

    public void pop() {
        
        if(stk.isEmpty()) return;
        int val=stk.pop();
        if(val==min.peek()) min.pop();
    }

    // Returns top element of the Stack
        
    public int peek() {
        if(stk.isEmpty()) return -1;
        return stk.peek();
    }

        
    // Finds minimum element of Stack
    public int getMin() {
        if(min.isEmpty()) return -1;
        return min.peek();
    }
}
