public class Solution {
	public static Node sortLL(Node head) {
		if(head==null || head.next==null) return head;
        Node mid=findmid(head);
        Node left=head;
        Node right=mid.next;
        mid.next=null;
        left=sortLL(left);
        right=sortLL(right);

        Node result=merge(left,right);

        return result;
    }
    public static Node findmid(Node head)
    {
        if(head==null || head.next==null) return head;
        Node slow=head;
        Node fast=head.next;
        while(fast!=null && fast.next!=null)
        {
            slow=slow.next;
            fast=fast.next.next;
        }
        return slow;
    }

    public static Node merge(Node left,Node right)
    {
        if(left==null) return right;
        if(right==null) return left;

        Node ans=new Node(-1);
        Node temp=ans;

        while (left != null && right != null) {
            if (left.data < right.data) {
                temp.next = left;
                left = left.next;
            } else {
                temp.next = right;
                right = right.next;
            }
            temp = temp.next;
        }

        if (left != null) temp.next = left;
        if (right != null) temp.next = right;
        ans=ans.next;
        return ans;
    }
}
